//class Solution {
public:
    bool canJump(vector<int>& nums) {
        int c=nums.size()-1;
        for(int i=c-1;i>=0;i--){
            if(nums[i]+i>=c){
                c=i;
            }
        }
        return c==0;
    }
};
//class Solution {
  public:
 
    int findPlatform(vector<int>& arr, vector<int>& dep) {
        sort(arr.begin(), arr.end());
        sort(dep.begin(), dep.end());

        int c = 0;      
        int maxi = 0;    
        int i = 0, j = 0;
        int n = arr.size();

        while (i < n && j < n) {
            if (arr[i] <= dep[j]) {
                c++;
                i++;
            } else {
                c--;
                j++;
            }
            maxi = max(maxi, c);
        }

        return maxi;
    }
};
