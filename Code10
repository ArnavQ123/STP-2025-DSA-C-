//leetcode problem
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> ans(2);
        unordered_map<int,int> dp;
        for(int i=0;i<nums.size();++i){
            if(dp.find(target-nums[i])!=dp.end()){
                ans[0]=dp[target-nums[i]];
                ans[1]=i;
                break;
            }
            dp[nums[i]]=i;
        }
        return ans;
    }
};
//gfg problem
class Solution {
  public:
    bool isSorted(vector<int>& arr) {
        // code here
        for(int i=1;i<arr.size();i++){
            if(arr[i]<arr[i-1]){
                return false;
            }
        }
        return true;
        
    }
};
